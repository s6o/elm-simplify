module Main exposing (..)

{-| Demo of elm-simplify.
-}
import Json.Decode exposing (Decoder, field, Value)
import Json.Encode
import Html exposing
  (Html
  , a
  , br
  , canvas, code
  , dd, div, dl, dt
  , em
  , h1
  , iframe, input
  , label
  , p
  , span, strong
  , text
  )
import Html.Attributes as HAttr exposing (class, height, href, id, src, type_, value, width)


main : Program Flags Model Msg
main =
  Html.programWithFlags
   { init = init
   , update = update
   , subscriptions = subscriptions
   , view = view
   }


type alias Flags =
  { data : Value
  }

type alias Model =
  { data : List (Float, Float)
  }

type Msg
  = NoOp


{-| JSON decoder for test data loded via `Flags`
-}
decoder : Decoder (List (Float, Float))
decoder =
  Json.Decode.list
    <| Json.Decode.map2
        (\x y -> (x, y))
        (field "x" Json.Decode.float)
        (field "y" Json.Decode.float)


{-|-}
init : Flags -> (Model, Cmd Msg)
init flags =
  ( Json.Decode.decodeValue decoder flags.data
      |> Result.withDefault []
      |> Model
  , Cmd.none
  )


{-|-}
update : Msg -> Model -> (Model, Cmd Msg)
update msg model =
  ( model
  , Cmd.none
  )


{-|-}
subscriptions : Model -> Sub Msg
subscriptions model =
  Sub.none


{-|-}
view : Model -> Html Msg
view model =
  div
    [ class "container" ]
    [ h1
      []
      [ text "elm-simplify"
      ]

    , p [ class "social-buttons" ]
      [ iframe
        [ src "http://ghbtns.com/github-btn.html?user=s6o&amp;repo=elm-simplify&amp;type=watch&amp;count=true"
        , HAttr.attribute "allowtransparency" "true"
        , HAttr.attribute "frameborder" "0"
        , HAttr.attribute "scrolling" "0"
        , HAttr.attribute "width" "95px"
        , HAttr.attribute "height" "20px"
        ]
        []
      ]

    , p
      []
      [ text "elm-simplify ("
      , strong [] [ text "License" ]
      , text ": "
      , em [] [ text "BSD"]
      , text ", "
      , strong [] [ text "GitHub" ]
      , text ": "
      , a
        [ href "http://github.com/s6o/elm-simplify"
        ]
        [ text "s6o / elm-simplify"
        ]
      , text ", "
      , strong [] [ text "package.elm-lang.org" ]
      , text ": "
      , em [] [ text "s6o/elm-simplify" ]
      , text <| ") is a port of the 2D variant of the tiny high-performance"
        ++ " JavaScript polyline simplification library "
      , a
          [ href "http://mourner.github.io/simplify-js/" ]
          [ text " Simplify.js" ]
      , text ". It uses a combination of "
      , a
          [ href "http://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm" ]
          [ text "Ramer-Douglas-Peucker" ]
      , text " and Radial Distance algorithms."
      ]

    , p []
      [ text <|
        "Polyline simplification dramatically reduces the number of points in a"
      ++ " polyline while retaining its shape, giving a huge performance boost when"
      ++ " processing it and also reducing visual noise. For example, it's essential"
      ++ " when rendering a 70k-points line chart or a map route in the browser using Canvas or SVG."
      ]

    , div
      [ class "canvas-container cf" ]
      [ p
        [ class "tolerance-container" ]
        [ input
          [ id "tolerance"
          , type_ "text"
          , value "0.8"
          ]
          []
        ]

      , p [ class "stats" ]
        [ em [ id "point-num-before" ] []
        , text "points, simplified with tolerance: "
        , em [ id "tolerance-val" ] []
        , text "px"
        , br [] []
        , text "After simplification: "
        , em [ id "point-num-after" ] []
        , text "points (~"
        , em [ id "point-num-times" ] []
        , text "times less)"
        , br [] []
        , text " Performed in "
        , em [ id "duration" ] []
        , text " ms"
        ]

      , p [ class "quality" ]
        [ label
          []
          [ input [ id "quality", type_ "checkbox" ] []
          , text " highest quality"
          ]
        ]

      , p [ class "attribution" ]
        [ text <|
            "The test data for the example is actually a ~10700 mile car route"
        ++ " from Lisboa, Portugal to Singapore on a world scale, generated by the "
        , a [ href "http://developers.cloudmade.com/wiki/navengine/Documentation" ]
          [ text "CloudMade Navigation service"
          ]
        , text " based on "
        , a [ href "http://openstreetmap.org" ]
          [ text "OpenStreetMap"
          ]
        , text " data."
        ]

      , canvas
        [ id "canvas"
        , width 800
        , height 400
        ]
        []
      ]

    , dl []
      [ dt []
        [ code []
          [ text "simplifyDefault : List (Float, Float) -> List (Float, Float)"
          ]
        ]
      , dd []
        [ p []
          [ text <| "Convenience function. `PixelTolerance` is set to `OnePixel` "
            ++ "and `Quality` is set to `Low`. Returns a list of simplified points."
          ]
        ]

      , dt []
        [ code []
          [ text "simplify : PixelTolerance -> Qaulity -> List (Float, Float) -> List (Float, Float)"
          ]
        ]
      , dd []
        [ p [] [ text "Returns a list of simplified points." ]
        ]

      , dt []
        [ code []
          [ text
            """
            type PixelTolerance
              = OnePixel
              | Pixels Float
            """
          ]
        ]
      , dd []
        [ p []
          [ text "Affects the amount of simplification (in the same metric as the point coordinates)."
          ]
        ]

      , dt []
        [ code []
          [ text
            """
            type Quality
              = Low
              | High
            """
          ]
        ]
      , dd []
        [ p []
          [ text <| "`High` excludes distance-based pre-processing step which leads to"
            ++ " highest quality simplification, but runs slower."
          ]
        ]
      ]

      , dt []
        [ code []
          [ text "points : List (Float, Float)" ]
        ]
      , dd []
        [ p []
          [ text "A list of tuples - pairs of x, y coordinates - of "
          , code [] [ text "(Float, Float)" ]
          ]
        , p []
          [ text "Note: the 3D version of Simplify.js is not yet supported."
          ]
        ]

    , p [ class "footer" ]
      [ span [ HAttr.property "innerHTML" (Json.Encode.string "&copy;") ] []
      , text " 2017, "
      , a [ href "https://github.com/s6o/elm-simplify" ]
        [ text "Oliver SÃµro"
        ]
      , text ". Released under "
      , a [ href "https://raw.github.com/s6o/elm-simplify/master/LICENSE" ]
        [ text "BSD license"
        ]
      , text "."
      ]
    ]